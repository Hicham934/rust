var searchIndex = new Map(JSON.parse('[\
["loadbalancer",{"doc":"","t":"CHHFONNHNNNHHNNN","n":["backends","main","route_request","LAST_BACKEND","__private_field","borrow","borrow_mut","check_backend_health","deref","from","into","maintain_backends_health","select_backend","try_from","try_into","type_id"],"q":[[0,"loadbalancer"],[3,"loadbalancer::backends"],[16,"hyper::body::body"],[17,"http::request"],[18,"http::response"],[19,"hyper::error"],[20,"core::result"],[21,"hyper::client::connect::http"],[22,"hyper::client::client"],[23,"std::sync::mutex"],[24,"alloc::string"],[25,"core::option"],[26,"core::any"]],"d":["Import du module <code>backends</code> défini par l’utilisateur pour …","Point d’entrée principal de l’application.","Fonction asynchrone pour router les requêtes entrantes …","","","","","Vérifie la santé d’un backend spécifique.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Vérifie périodiquement la santé des backends.","Sélectionne de manière cyclique le backend suivant pour …","","",""],"i":[0,0,0,0,11,11,11,0,11,11,11,0,0,11,11,11],"f":[0,[[],1],[[[3,[2]]],[[6,[[4,[2]],5]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[8,[7]],9],10],[11,[[13,[12]]]],[-1,-1,[]],[-1,-2,[],[]],[[],1],[[],[[15,[14]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,16,[]]],"c":[],"p":[[1,"tuple"],[5,"Body",16],[5,"Request",17],[5,"Response",18],[5,"Error",19],[6,"Result",20],[5,"HttpConnector",21],[5,"Client",22],[1,"str"],[1,"bool"],[5,"LAST_BACKEND",3],[1,"u8"],[5,"Mutex",23],[5,"String",24],[6,"Option",25],[5,"TypeId",26]],"b":[]}],\
["serveur1",{"doc":"","t":"HH","n":["handle_request","main"],"q":[[0,"serveur1"],[2,"hyper::body::body"],[3,"http::request"],[4,"http::response"],[5,"hyper::error"],[6,"core::result"]],"d":["Fonction pour gérer les requêtes HTTP reçues par le …","Point d’entrée du serveur 1."],"i":[0,0],"f":[[[[2,[1]]],[[5,[[3,[1]],4]]]],[[],6]],"c":[],"p":[[5,"Body",2],[5,"Request",3],[5,"Response",4],[5,"Error",5],[6,"Result",6],[1,"tuple"]],"b":[]}],\
["serveur2",{"doc":"","t":"HH","n":["handle_request","main"],"q":[[0,"serveur2"],[2,"hyper::body::body"],[3,"http::request"],[4,"http::response"],[5,"hyper::error"],[6,"core::result"]],"d":["Fonction pour gérer les requêtes HTTP reçues par le …","Point d’entrée du serveur 1."],"i":[0,0],"f":[[[[2,[1]]],[[5,[[3,[1]],4]]]],[[],6]],"c":[],"p":[[5,"Body",2],[5,"Request",3],[5,"Response",4],[5,"Error",5],[6,"Result",6],[1,"tuple"]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
